plugins {
    // Access to git information
    id 'org.ajoberstar.grgit'
}

project.ext.gitBranch = grgit.branch.current.name.replace('/', '-')
def registry = "${project.rootProject.properties['docker.registry']}"

task buildImage(type: Exec) {
    dependsOn "export.launch"
    inputs.files 'src/org/jgrapes/osgi/demo/console/Containerfile'
    
    commandLine 'podman', 'build', '--pull',
        '-t', "${project.name}:${project.gitBranch}",\
        '-f', 'src/org/jgrapes/osgi/demo/console/Containerfile', '.'
}

task pushImage(type: Exec) {
    dependsOn buildImage

    commandLine 'podman', 'push', '--tls-verify=false', \
        "${project.name}:${project.gitBranch}", \
        "${registry}/${project.name}:${project.gitBranch}"
        
    doLast {
        println "Pushed to ${registry}/${project.name}:latest"
    }
}

task tagWithVersion(type: Exec) {
    dependsOn pushImage

    commandLine 'podman', 'push', \
        "${project.name}:${project.gitBranch}",\
        "${registry}/${project.name}:${project.version}"
        
    doLast {
        println "Tagged as ${registry}/${project.name}:${project.version}"
    }
}

task tagAsLatest(type: Exec) {
    dependsOn tagWithVersion

    commandLine 'podman', 'push', \
        "${project.name}:${project.gitBranch}",\
        "${registry}/${project.name}:latest"
        
    doLast {
        println "Pushed to ${registry}/${project.name}:latest"
    }
}

task publishImage {
    dependsOn pushImage
    dependsOn tagWithVersion
    dependsOn tagAsLatest
}
